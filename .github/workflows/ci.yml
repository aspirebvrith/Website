name: A.S.P.I.R.E Club CI

on:
  push:
    branches: [ main, master, develop ] # Adjust to your main development branches
  pull_request:
    branches: [ main, master, develop ] # Adjust to your main development branches

jobs:
  build-and-test-frontend:
    name: Build and Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18' # Specify your project's Node.js version
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Dependencies
      run: npm ci # Using npm ci for cleaner installs in CI

    - name: Lint Frontend
      run: npm run lint # Assumes 'lint' script in frontend/package.json

    - name: Build Frontend
      run: npm run build # Assumes 'build' script in frontend/package.json

    # - name: Test Frontend
    #   run: npm run test # Uncomment if you have a 'test' script

  build-and-test-backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18' # Specify your project's Node.js version
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install Dependencies
      run: npm ci # Using npm ci for cleaner installs in CI

    - name: Lint Backend
      run: npm run lint # Assumes 'lint' script in backend/package.json

    # - name: Build Backend (if applicable, e.g., for TypeScript)
    #   run: npm run build # Assumes 'build' script in backend/package.json

    # - name: Test Backend
    #   run: npm run test # Uncomment if you have a 'test' script
